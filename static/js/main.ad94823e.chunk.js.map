{"version":3,"sources":["services/index.js","redux/actions/index.js","pages/Login.js","components/Header.js","components/Table.js","components/WalletForm.js","pages/Wallet.js","App.js","serviceWorker.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["fetchAPI","fetch","then","response","json","ok","Promise","resolve","reject","SAVE_LOGIN","FETCH_SUCESS","SAVE_EXPENSES","saveExpensesSucess","expense","type","DELETE_ITEM","EDIT_ITEM","UPDATE_ITEM","Login","handleChange","target","name","value","setState","validateLogin","state","emailInput","passwordInput","length","test","btnDisabled","handleLogin","saveLoginFunc","props","redirect","this","to","className","placeholder","onChange","disabled","onClick","href","React","Component","connect","dispatch","email","Header","user","expenses","wallet","style","color","reduce","acc","currency","exchangeRates","parseFloat","ask","toFixed","Table","handleFilter","rank","deleteItemFunc","editItemFunc","editor","idToEdit","realExpenses","sort","a","b","filter","id","map","index","description","tag","method","cambio","key","split","Math","round","WalletForm","componentDidMount","getCurrencies","handleSave","updateItemFunc","toString","saveExpensesFunc","currencies","htmlFor","USDT","siglas","Object","values","code","console","log","Wallet","App","path","exact","Boolean","window","location","hostname","match","INITIAL_STATE","action","rootReducer","combineReducers","applyMiddleware","require","store","createStore","composeWithDevTools","default","Cypress","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"2WAQeA,EARE,WAEf,OAAOC,MADK,+CAETC,MAAK,SAACC,GAAD,OAAeA,EAASC,OAC3BF,MAAK,SAACE,GAAD,OAAWD,EAASE,GAAKC,QAAQC,QAAQH,GAAQE,QAAQE,OAAOJ,EAAhE,GADF,GAGT,ECHYK,EAAa,aAObC,EAAe,eAgBrB,IAAMC,EAAgB,gBAEhBC,EAAqB,SAACC,GAAD,MAAc,CAC9CC,KAAMH,EACNE,UAFgC,EAc3B,IAAME,EAAc,cAOdC,EAAY,YAOZC,EAAc,cChDrBC,G,wDACJ,aAAe,IAAD,8BACZ,gBASFC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,EAAKC,SAAL,eAAiBF,EAAOC,GAAS,EAAKE,cACvC,EAba,EAedA,cAAgB,WACd,MAAsC,EAAKC,MAAnCC,EAAR,EAAQA,WAAR,EAAoBC,cAGFC,QADC,GADH,0DAEkCC,KAAKH,GACrD,EAAKH,SAAS,CAAEO,aAAa,IAE7B,EAAKP,SAAS,CAAEO,aAAa,GAEhC,EAxBa,EA0BdC,YAAc,WACZ,IAAQL,EAAe,EAAKD,MAApBC,YAERM,EAD0B,EAAKC,MAAvBD,eACMN,GACd,EAAKH,SAAS,CAAEW,UAAU,GAC3B,EA7BC,EAAKT,MAAQ,CACXC,WAAY,GACZC,cAAe,GACfG,aAAa,EACbI,UAAU,GANA,CAQb,C,0CAyBD,WACE,MAAkCC,KAAKV,MAA/BK,EAAR,EAAQA,YACR,OADA,EAAqBI,SACA,kBAAC,IAAD,CAAUE,GAAG,cAEhC,6BACE,0BAAMC,UAAU,cACd,kBAAC,IAAD,CAAUA,UAAU,SACpB,yCACA,2BACE,cAAY,cACZC,YAAY,QACZjB,KAAK,aACLkB,SAAWJ,KAAKhB,eAElB,2BACE,cAAY,iBACZmB,YAAY,QACZjB,KAAK,gBACLP,KAAK,WACLyB,SAAWJ,KAAKhB,eAElB,4BACEL,KAAK,SACL0B,SAAWV,EACXW,QAAUN,KAAKJ,aAHjB,UAOA,uBAAGW,KAAK,kBAAR,wBAIP,K,GAlEiBC,IAAMC,YA6EXC,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCd,cAAe,SAACV,GAAD,OAAWwB,ED7ES,CACnChC,KAAML,EACNsC,MC2E6CzB,GAA9B,EADU,GAIZuB,CAAkC3B,GChF3C8B,E,4JACJ,WACE,MAAyBb,KAAKF,MAAtBgB,EAAR,EAAQA,KACAC,EADR,EAAcC,OACND,SACR,OACE,yBAAKb,UAAU,UACb,kBAAC,IAAD,CAAWA,UAAU,SACrB,uBAAGA,UAAU,QAAQ,cAAY,eAAgBY,EAAKF,OACtD,uBAAGV,UAAU,SACX,0BAAMe,MAAQ,CAAEC,MAAO,YAAvB,KADF,OAGE,0BAAMD,MAAQ,CAAEC,MAAO,YAAvB,KAHF,SAMA,yBAAKhB,UAAU,mBACb,iCACA,uBAAG,cAAY,eACXa,EAASI,QAAO,SAACC,EAAK1C,GACtB,IAAQS,EAAmCT,EAAnCS,MAAOkC,EAA4B3C,EAA5B2C,SAAUC,EAAkB5C,EAAlB4C,cACzB,OAAOF,EAAMG,WAAWpC,GAASoC,WAAWD,EAAcD,GAAUG,IACrE,GAAE,GAAGC,QAAQ,KAMvB,K,GA1BkBhB,aAuCNC,eALS,SAACpB,GAAD,MAAY,CAClCwB,KAAMxB,EAAMwB,KACZE,OAAQ1B,EAAM0B,OAFQ,GAKTN,CAAyBG,G,gCClClCa,E,kDACJ,aAAe,IAAD,8BACZ,gBAMFC,aAAe,YAAiB,IAAd1C,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,EAAKC,SAAL,eAAiBF,EAAOC,GACzB,EARC,EAAKG,MAAQ,CACXsC,MAAM,GAHI,CAKb,C,0CAOD,WAAU,IAAD,OACP,EAAiD5B,KAAKF,MAA9CkB,EAAR,EAAQA,OAAQa,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,aACxBF,EAAS5B,KAAKV,MAAdsC,KACAb,EAA+BC,EAA/BD,SAAUgB,EAAqBf,EAArBe,OAAQC,EAAahB,EAAbgB,SACtBC,EAAelB,EAQnB,OAPIA,EAAStB,OAAS,GAAKmC,GACzBK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEb,cAAca,EAAEd,UAAUG,IAAMW,EAAEhD,MAClCiD,EAAEd,cAAcc,EAAEf,UAAUG,IAAMY,EAAEjD,KAFtB,IAKhB4C,IAAQE,EAAelB,EAASsB,QAAO,SAAC3D,GAAD,OAAaA,EAAQ4D,KAAON,CAA5B,KAEzC,6BACE,uBAAG9B,UAAU,eAAb,mBACA,2BAAOA,UAAU,SACf,2BAAOA,UAAU,gBACf,4BACE,qCACA,2CACA,mCACA,sCACA,qCACA,wCACA,oCACA,2CACA,gDACA,6CAGJ,2BAAOA,UAAU,cAEb+B,EAAaM,KAAI,SAAC7D,EAAS8D,GACzB,IAAQF,EAC6B5D,EAD7B4D,GAAIG,EACyB/D,EADzB+D,YAAaC,EACYhE,EADZgE,IAAKC,EACOjE,EADPiE,OAC5BxD,EAAmCT,EAAnCS,MAAOkC,EAA4B3C,EAA5B2C,SAAUC,EAAkB5C,EAAlB4C,cACbsB,EAASrB,WAAWD,EAAcD,GAAUG,KAoClD,OAlCE,wBAAIqB,IAAMP,GACR,4BAAME,EAAQ,GACd,4BAAMC,GACN,4BACY,SAARC,GAAkB,kBAAC,IAAD,MACV,WAARA,GAAoB,kBAAC,IAAD,MACZ,cAARA,GAAuB,kBAAC,IAAD,MACf,SAARA,GAAkB,kBAAC,IAAD,MACV,eAARA,GAAwB,kBAAC,IAAD,OAE5B,4BAAMC,GACN,4BAAMpB,WAAWpC,GAAOsC,QAAQ,IAChC,4BAAMH,EAAcD,GAAUnC,KAAK4D,MAAM,KAAK,IAC9C,4BAAMC,KAAKC,MAAe,IAATJ,GAAgB,KACjC,4BAAMG,KAAKC,MAAMzB,WAAWpC,GAASyD,EAAS,KAAO,KACrD,oCACA,4BACE,4BACEjE,KAAK,SACL,cAAY,WACZ2B,QAAU,kBAAMwB,EAAaQ,EAAnB,GAEV,kBAAC,IAAD,OAEF,4BACE3D,KAAK,SACL,cAAY,aACZ2B,QAAU,kBAAMuB,EAAeS,EAArB,GAEV,kBAAC,IAAD,QAMT,MAIP,4BACE3D,KAAK,SACLuB,UAAU,WACVI,QAAU,WAAQ,EAAKlB,SAAS,CAAEwC,MAAM,GAAU,GAHpD,uBASL,K,GAlGiBnB,aAoHLC,eATS,SAACpB,GAAD,MAAY,CAClC0B,OAAQ1B,EAAM0B,OADQ,IAIG,SAACL,GAAD,MAAe,CACxCkB,eAAgB,SAAC1C,GAAD,OAAWwB,EH9EM,CACjChC,KAAMC,EACN0D,GG4E+CnD,GAA/B,EAChB2C,aAAc,SAAC3C,GAAD,OAAWwB,EHxEM,CAC/BhC,KAAME,EACNyD,GGsE2CnD,GAA7B,EAFW,GAKZuB,CAA6CgB,GCzHtDuB,E,kDACJ,aAAe,IAAD,8BACZ,gBAUFC,kBAAoB,YAElBC,EAD0B,EAAKrD,MAAvBqD,gBAET,EAda,EAgBdnE,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,EAAKC,SAAL,eAAiBF,EAAOC,GACzB,EAnBa,EAqBdiE,WAAa,WACX,MAAsD,EAAK9D,MAAnDH,EAAR,EAAQA,MAAOsD,EAAf,EAAeA,YAAapB,EAA5B,EAA4BA,SAAUsB,EAAtC,EAAsCA,OAAQD,EAA9C,EAA8CA,IAC9C,EAAmC,EAAK5C,MAAhCkB,EAAR,EAAQA,OAAQqC,EAAhB,EAAgBA,eACRtB,EAAqBf,EAArBe,OAAQC,EAAahB,EAAbgB,SAChB,GAAID,EACFsB,EAAe,CACbf,GAAIN,EACJ7C,MAAOA,EAAMmE,WACbb,cACApB,WACAsB,SACAD,YAEG,CACL,IAAMJ,EAAiC,IAA3BtB,EAAOD,SAAStB,OACxB,EACAuB,EAAOD,SAASC,EAAOD,SAAStB,OAAS,GAAG6C,GAAK,GAErDiB,EAD6B,EAAKzD,MAA1ByD,kBACS,CACfjB,KACAnD,MAAOA,EAAMmE,WACbb,cACApB,WACAsB,SACAD,OAEH,CACD,EAAKtD,SAAS,CACZD,MAAO,GACPsD,YAAa,IAEhB,EAlDC,EAAKnD,MAAQ,CACXH,MAAO,GACPsD,YAAa,GACbpB,SAAU,MACVsB,OAAQ,WACRD,IAAK,qBAPK,CASb,C,0CA6CD,WACE,IAAQ1B,EAAWhB,KAAKF,MAAhBkB,OACAwC,EAAuBxC,EAAvBwC,WAAYzB,EAAWf,EAAXe,OACpB,EAA+B/B,KAAKV,MAA5BH,EAAR,EAAQA,MAAOsD,EAAf,EAAeA,YAGf,OACE,6BACE,0BAAMvC,UAAU,eACd,2BAAOuD,QAAQ,SAAf,SAEE,2BACEvD,UAAU,QACVoC,GAAG,QACHpD,KAAK,QACLC,MAAQA,EACR,cAAY,cACZiB,SAAWJ,KAAKhB,gBAGpB,2BAAOyE,QAAQ,eAAf,eAEE,2BACEnB,GAAG,cACHpD,KAAK,cACLC,MAAQsD,EACR,cAAY,oBACZrC,SAAWJ,KAAKhB,gBAGpB,2BAAOyE,QAAQ,YAAf,YAEE,4BACEnB,GAAG,WACHpD,KAAK,WACL,cAAY,iBACZkB,SAAWJ,KAAKhB,cAEdwE,EAAWjB,KAAI,SAAClB,GAAD,OACf,4BAAQwB,IAAMxB,EAAWlC,MAAQkC,GAAaA,EAD/B,MAKrB,2BAAOoC,QAAQ,UAAf,UAEE,4BACEnB,GAAG,SACHpD,KAAK,SACL,cAAY,eACZkB,SAAWJ,KAAKhB,cAEhB,wCACA,+CACA,gDAGJ,2BAAOyE,QAAQ,OAAf,OAEE,4BACEnB,GAAG,MACHpD,KAAK,MACL,cAAY,YACZkB,SAAWJ,KAAKhB,cAEhB,wCACA,8CACA,wCACA,6CACA,4CAGJ,4BACEL,KAAK,SACL2B,QAAUN,KAAKoD,YAEbrB,EAtEW,OADD,QA4ErB,K,GAvIsBtB,aA2JVC,eAJS,SAACpB,GAAD,MAAY,CAClC0B,OAAQ1B,EAAM0B,OADQ,IANG,SAACL,GAAD,MAAe,CACxCwC,cAAe,kBAAMxC,EJrIrB,iDAAO,WAAOA,GAAP,mGACkB9C,IADlB,cACCG,EADD,QAEW0F,KACVC,EAASC,OAAOC,OAAO7F,GAAUuE,KAAI,SAAClB,GAAD,OAAcA,EAASyC,IAAvB,IAC3CnD,EAVyC,CAC3ChC,KAAMJ,EACNiF,WAQ+BG,IAJxB,2CAAP,sDIqIe,EACfJ,iBAAkB,SAACpE,GAAD,OAAWwB,GJvHFjC,EIuHwBS,EJtHnD,iDAAO,WAAOwB,GAAP,iGACkB9C,IADlB,cACCG,EADD,QAEW0F,KAChBhF,EAAQ4C,cAAgBtD,EACxB2C,EAASlC,EAAmBC,IAJvB,2CAAP,wDADK,IAAsBA,CIuHT,EAClB2E,eAAgB,SAAClE,GAAD,OAAWwB,GJ/FFjC,EI+FsBS,EJ9F/C4E,QAAQC,IAAItF,GACL,CACLC,KAAMG,EACNJ,aAJsB,IAACA,CI+FT,EAHS,GAUZgC,CAA6CuC,GC1JtDgB,G,kKACJ,WACE,OACE,6BACE,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAGL,K,GAVkBzD,IAAMC,YAaZwD,I,MCDAC,MAZf,WACE,OACE,yBAAKhE,UAAU,cACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiE,KAAK,IAAIC,OAAK,GAAC,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOD,KAAK,aAAY,kBAAC,EAAD,QAE1B,4BAAQjE,UAAU,UAAlB,4BAGL,ECJmBmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCfAC,EAAgB,CACpB9D,MAAO,IAYME,EATF,WAAoC,IAAnCxB,EAAkC,uDAA1BoF,EAAeC,EAAW,uCAC9C,OAAQA,EAAOhG,OACVL,EACI,2BAAKgB,GAAZ,IAAmBsB,MAAO+D,EAAO/D,QAE1BtB,CAEV,E,QCVKoF,EAAgB,CACpBlB,WAAY,GACZzC,SAAU,GACVgB,QAAQ,EACRC,SAAU,GA8BGhB,EA3BA,WAAoC,IAAnC1B,EAAkC,uDAA1BoF,EAAeC,EAAW,uCAChD,OAAQA,EAAOhG,MACf,KAAKJ,EACH,OAAO,2BAAKe,GAAZ,IAAmBkE,WAAYmB,EAAOnB,aACxC,KAAKhF,EACH,OAAO,2BAAKc,GAAZ,IAAmByB,SAAS,GAAD,mBAAMzB,EAAMyB,UAAZ,CAAsB4D,EAAOjG,YAC1D,KAAKE,EACH,OAAO,2BACFU,GADL,IAEEyB,SAAUzB,EAAMyB,SAASsB,QAAO,SAAC3D,GAAD,OAAaA,EAAQ4D,KAAOqC,EAAOrC,EAAnC,MAEpC,KAAKzD,EACH,OAAO,2BAAKS,GAAZ,IAAmByC,QAAQ,EAAMC,SAAU2C,EAAOrC,KACpD,KAAKxD,EACH,OAAO,2BACFQ,GADL,IAEEyC,QAAQ,EACRC,UAAW,EACXjB,SAAUzB,EAAMyB,SAASwB,KAAI,SAAC7D,GAAD,OAAeA,EAAQ4D,KAAOqC,EAAOjG,QAAQ4D,GAA/B,YAAC,eACnC5D,GAAYiG,EAAOjG,SACxBA,CAFyB,MAIjC,QACE,OAAOY,EAEV,EC3BcsF,EAFKC,0BAAgB,CAAE/D,OAAME,WCLpC8D,EAAoBC,EAAQ,IAA5BD,gBAKFE,GAAQC,EAJUF,EAAQ,IAAxBE,aAKNL,GACAM,EAL8BH,EAAQ,IAAhCG,qBAKcJ,EAJKC,EAAQ,IAA3BI,WAOJb,OAAOc,UACTd,OAAOU,MAAQA,GAGFA,QCPfK,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUN,MAAQA,GAChB,kBAAC,EAAD,QAGJO,SAASC,eAAe,SLoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5H,MAAK,SAAA6H,GACJA,EAAaC,YACd,IACAC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,QACrB,G","file":"static/js/main.ad94823e.chunk.js","sourcesContent":["const fetchAPI = () => {\n  const url = 'https://economia.awesomeapi.com.br/json/all';\n  return fetch(url)\n    .then((response) => (response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ));\n};\n\nexport default fetchAPI;\n","import fetchAPI from '../../services';\n\n// Coloque aqui suas actions\nexport const SAVE_LOGIN = 'SAVE_LOGIN';\n\nexport const saveLogin = (email) => ({\n  type: SAVE_LOGIN,\n  email,\n});\n\nexport const FETCH_SUCESS = 'FETCH_SUCESS';\n\nconst getCurrenciesSucess = (currencies) => ({\n  type: FETCH_SUCESS,\n  currencies,\n});\n\nexport function fetchCurrencies() {\n  return async (dispatch) => {\n    const response = await fetchAPI();\n    delete response.USDT;\n    const siglas = Object.values(response).map((currency) => currency.code);\n    dispatch(getCurrenciesSucess(siglas));\n  };\n}\n\nexport const SAVE_EXPENSES = 'SAVE_EXPENSES';\n\nexport const saveExpensesSucess = (expense) => ({\n  type: SAVE_EXPENSES,\n  expense,\n});\n\nexport function saveExpenses(expense) {\n  return async (dispatch) => {\n    const response = await fetchAPI();\n    delete response.USDT;\n    expense.exchangeRates = response;\n    dispatch(saveExpensesSucess(expense));\n  };\n}\n\nexport const DELETE_ITEM = 'DELETE_ITEM';\n\nexport const deleteItem = (id) => ({\n  type: DELETE_ITEM,\n  id,\n});\n\nexport const EDIT_ITEM = 'EDIT_ITEM';\n\nexport const editItem = (id) => ({\n  type: EDIT_ITEM,\n  id,\n});\n\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\n\nexport const updateItem = (expense) => {\n  console.log(expense);\n  return {\n    type: UPDATE_ITEM,\n    expense,\n  };\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { FaWallet } from 'react-icons/fa';\nimport { saveLogin } from '../redux/actions';\nimport '../css/login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailInput: '',\n      passwordInput: '',\n      btnDisabled: true,\n      redirect: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value }, this.validateLogin);\n  }\n\n  validateLogin = () => {\n    const { emailInput, passwordInput } = this.state;\n    const matcher = /^[a-zA-Z0-9.!#$%&*+/=?^_{|}~-]+@[a-zA-Z0-9.-]+\\.com$/img;\n    const minLenPass = 6;\n    if (passwordInput.length >= minLenPass && matcher.test(emailInput)) {\n      this.setState({ btnDisabled: false });\n    } else {\n      this.setState({ btnDisabled: true });\n    }\n  }\n\n  handleLogin = () => {\n    const { emailInput } = this.state;\n    const { saveLoginFunc } = this.props;\n    saveLoginFunc(emailInput);\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { btnDisabled, redirect } = this.state;\n    if (redirect) return <Redirect to=\"/carteira\" />;\n    return (\n      <div>\n        <form className=\"login-form\">\n          <FaWallet className=\"icon\" />\n          <h1>my wallet</h1>\n          <input\n            data-testid=\"email-input\"\n            placeholder=\"email\"\n            name=\"emailInput\"\n            onChange={ this.handleChange }\n          />\n          <input\n            data-testid=\"password-input\"\n            placeholder=\"senha\"\n            name=\"passwordInput\"\n            type=\"password\"\n            onChange={ this.handleChange }\n          />\n          <button\n            type=\"button\"\n            disabled={ btnDisabled }\n            onClick={ this.handleLogin }\n          >\n            Entrar\n          </button>\n          <a href=\"www.google.com\">forgot the password</a>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  saveLoginFunc: propTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveLoginFunc: (value) => dispatch(saveLogin(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaUserAlt } from 'react-icons/fa';\n\nclass Header extends Component {\n  render() {\n    const { user, wallet } = this.props;\n    const { expenses } = wallet;\n    return (\n      <div className=\"header\">\n        <FaUserAlt className=\"icon\" />\n        <p className=\"email\" data-testid=\"email-field\">{ user.email }</p>\n        <p className=\"title\">\n          <span style={ { color: '#1BB81B' } }>T</span>\n          rybe\n          <span style={ { color: '#1BB81B' } }>W</span>\n          allet\n        </p>\n        <div className=\"total-container\">\n          <p>R$</p>\n          <p data-testid=\"total-field\">\n            { expenses.reduce((acc, expense) => {\n              const { value, currency, exchangeRates } = expense;\n              return acc + parseFloat(value) * parseFloat(exchangeRates[currency].ask);\n            }, 0).toFixed(2) }\n          </p>\n          {/* <p data-testid=\"header-currency-field\">BRL</p> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  user: propTypes.objectOf(propTypes.string).isRequired,\n  wallet: propTypes.objectOf(propTypes.array).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  wallet: state.wallet,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AiTwotoneEdit, AiFillDelete } from 'react-icons/ai';\nimport { BiRestaurant } from 'react-icons/bi';\nimport { RiHealthBookFill } from 'react-icons/ri';\nimport { FaCarAlt, FaUmbrellaBeach } from 'react-icons/fa';\nimport { MdWork } from 'react-icons/md';\nimport { deleteItem, editItem } from '../redux/actions';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {\n      rank: false,\n    };\n  }\n\n  handleFilter = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { wallet, deleteItemFunc, editItemFunc } = this.props;\n    const { rank } = this.state;\n    const { expenses, editor, idToEdit } = wallet;\n    let realExpenses = expenses;\n    if (expenses.length > 0 && rank) {\n      realExpenses.sort((a, b) => (\n        a.exchangeRates[a.currency].ask * a.value\n        - b.exchangeRates[b.currency].ask * b.value\n      ));\n    }\n    if (editor) realExpenses = expenses.filter((expense) => expense.id !== idToEdit);\n    return (\n      <div>\n        <p className=\"table-title\">Exchanges Table</p>\n        <table className=\"table\">\n          <thead className=\"table-header\">\n            <tr>\n              <th>nº</th>\n              <th>Description</th>\n              <th>Tag</th>\n              <th>Method</th>\n              <th>Value</th>\n              <th>Currency</th>\n              <th>Rate</th>\n              <th>Value (BRL)</th>\n              <th>Currency default</th>\n              <th>Edit/Delete</th>\n            </tr>\n          </thead>\n          <tbody className=\"table-body\">\n            {\n              realExpenses.map((expense, index) => {\n                const { id, description, tag, method,\n                  value, currency, exchangeRates } = expense;\n                const cambio = parseFloat(exchangeRates[currency].ask);\n                const ligne = (\n                  <tr key={ id }>\n                    <td>{ index + 1 }</td>\n                    <td>{ description }</td>\n                    <td>\n                      { tag === 'Food' && <BiRestaurant /> }\n                      { tag === 'Health' && <RiHealthBookFill /> }\n                      { tag === 'Transport' && <FaCarAlt /> }\n                      { tag === 'Work' && <MdWork /> }\n                      { tag === 'Spare time' && <FaUmbrellaBeach /> }\n                    </td>\n                    <td>{ method }</td>\n                    <td>{ parseFloat(value).toFixed(2) }</td>\n                    <td>{ exchangeRates[currency].name.split('/')[0] }</td>\n                    <td>{ Math.round(cambio * 100) / 100 }</td>\n                    <td>{ Math.round(parseFloat(value) * cambio * 100) / 100 }</td>\n                    <td>Real</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        data-testid=\"edit-btn\"\n                        onClick={ () => editItemFunc(id) }\n                      >\n                        <AiTwotoneEdit />\n                      </button>\n                      <button\n                        type=\"button\"\n                        data-testid=\"delete-btn\"\n                        onClick={ () => deleteItemFunc(id) }\n                      >\n                        <AiFillDelete />\n                      </button>\n                    </td>\n                  </tr>\n                );\n                return ligne;\n              })\n            }\n          </tbody>\n        </table>\n        <button\n          type=\"button\"\n          className=\"sort-btn\"\n          onClick={ () => { this.setState({ rank: true }); } }\n        >\n          Rank by value (BRL)\n        </button>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  wallet: propTypes.objectOf(propTypes.array).isRequired,\n  deleteItemFunc: propTypes.func.isRequired,\n  editItemFunc: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteItemFunc: (value) => dispatch(deleteItem(value)),\n  editItemFunc: (value) => dispatch(editItem(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, saveExpenses, updateItem } from '../redux/actions';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n  }\n\n  componentDidMount = () => {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleSave = () => {\n    const { value, description, currency, method, tag } = this.state;\n    const { wallet, updateItemFunc } = this.props;\n    const { editor, idToEdit } = wallet;\n    if (editor) {\n      updateItemFunc({\n        id: idToEdit,\n        value: value.toString(),\n        description,\n        currency,\n        method,\n        tag,\n      });\n    } else {\n      const id = (wallet.expenses.length === 0)\n        ? 0\n        : wallet.expenses[wallet.expenses.length - 1].id + 1;\n      const { saveExpensesFunc } = this.props;\n      saveExpensesFunc({\n        id,\n        value: value.toString(),\n        description,\n        currency,\n        method,\n        tag,\n      });\n    }\n    this.setState({\n      value: '',\n      description: '',\n    });\n  }\n\n  render() {\n    const { wallet } = this.props;\n    const { currencies, editor } = wallet;\n    const { value, description } = this.state;\n    const btnAddTitle = 'Add';\n    const btnEditTitle = 'Edit';\n    return (\n      <div>\n        <form className=\"wallet-form\">\n          <label htmlFor=\"value\">\n            Value:\n            <input\n              className=\"value\"\n              id=\"value\"\n              name=\"value\"\n              value={ value }\n              data-testid=\"value-input\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"description\">\n            Description:\n            <input\n              id=\"description\"\n              name=\"description\"\n              value={ description }\n              data-testid=\"description-input\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"currency\">\n            Currency:\n            <select\n              id=\"currency\"\n              name=\"currency\"\n              data-testid=\"currency-input\"\n              onChange={ this.handleChange }\n            >\n              { currencies.map((currency) => (\n                <option key={ currency } value={ currency }>{ currency }</option>\n              )) }\n            </select>\n          </label>\n          <label htmlFor=\"method\">\n            Method:\n            <select\n              id=\"method\"\n              name=\"method\"\n              data-testid=\"method-input\"\n              onChange={ this.handleChange }\n            >\n              <option>Cash</option>\n              <option>Credit Card</option>\n              <option>Debit Card</option>\n            </select>\n          </label>\n          <label htmlFor=\"tag\">\n            Tag:\n            <select\n              id=\"tag\"\n              name=\"tag\"\n              data-testid=\"tag-input\"\n              onChange={ this.handleChange }\n            >\n              <option>Food</option>\n              <option>Spare time</option>\n              <option>Work</option>\n              <option>Transport</option>\n              <option>Health</option>\n            </select>\n          </label>\n          <button\n            type=\"button\"\n            onClick={ this.handleSave }\n          >\n            { editor ? btnEditTitle : btnAddTitle }\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  getCurrencies: propTypes.func.isRequired,\n  wallet: propTypes.objectOf(propTypes.array).isRequired,\n  saveExpensesFunc: propTypes.func.isRequired,\n  updateItemFunc: propTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n  saveExpensesFunc: (value) => dispatch(saveExpenses(value)),\n  updateItemFunc: (value) => dispatch(updateItem(value)),\n});\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n","import React from 'react';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport WalletForm from '../components/WalletForm';\nimport '../css/wallet.css';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <hr />\n        <WalletForm />\n        <Table />\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"login-page\">\n      <Switch>\n        <Route path=\"/\" exact><Login /></Route>\n        <Route path=\"/carteira\"><Wallet /></Route>\n      </Switch>\n      <footer className=\"footer\">by Larissa Menezes, 2022</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SAVE_LOGIN } from '../actions';\n\n// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_LOGIN:\n    return { ...state, email: action.email };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import { DELETE_ITEM, EDIT_ITEM, FETCH_SUCESS,\n  SAVE_EXPENSES, UPDATE_ITEM } from '../actions';\n\n// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FETCH_SUCESS:\n    return { ...state, currencies: action.currencies };\n  case SAVE_EXPENSES:\n    return { ...state, expenses: [...state.expenses, action.expense] };\n  case DELETE_ITEM:\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.id),\n    };\n  case EDIT_ITEM:\n    return { ...state, editor: true, idToEdit: action.id };\n  case UPDATE_ITEM:\n    return {\n      ...state,\n      editor: false,\n      idToEdit: -1,\n      expenses: state.expenses.map((expense) => ((expense.id === action.expense.id)\n        ? { ...expense, ...action.expense }\n        : expense)),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","// import user from './user';\n// import wallet from './wallet';\n\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import rootReducer from './reducers';\n\nconst { applyMiddleware } = require('redux');\nconst { createStore } = require('redux');\nconst { composeWithDevTools } = require('redux-devtools-extension');\nconst { default: thunk } = require('redux-thunk');\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}